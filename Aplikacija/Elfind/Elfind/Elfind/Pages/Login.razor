@*page "/login"
@page "/logout" 
@*ne diraj iznad
@using Elfind.Data.Services
@inject StudentService userService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <div class="mb-3 text-center"
        <h3>LOGIN</h3>
        </div>
    <div class="mb-3">
        <label>Korisnicko ime</label>
        <input @bind="model.UserName" class="form-control" placeholder="Korisnicko ime" />
    </div>
    <div class="mb-3">
        <label> Lozinka</label>
        <input @bind="model.Password" class="form-control" placeholder=" Lozinka" />
    </div>
    <div class="nb-3 d-grid gap-2">
        <button @onclick="Authenticate" class="btn btn-primary">Login</button>
    </div>
</div>
</div>
@code{
    private class Model
    {
        public string UserName{ get; set; }
        public string Password { get; set; }
    }

    private Model model = new Model();

    private async Task Authenticate()
    {
        var userAccount = userService.preuzmiStudentaPoKorisnickomImenu(model.UserName);
        if(userAccount == null || userAccount.HashLozinka != model.Password)
        {
            await js.InvokeVoidAsync("alert", "Pogresno korisnicko ime ili lozinka");
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                UserName = userAccount.KorisnickoIme,
                Role = userAccount.Role
            });

        navManager.NavigateTo("/");


   
    }

}*@